<% provide(:title, 'Help') %>
<h1>Help</h1>
<h3>Historical search</h3>
<p>
  The historical search allows you to use a number of different operators to 
  help refine your search.
</p>
<p>
  Remember that this kind of search only always querying from the past and is 
  limited by the twitter search API to retrieving tweets from the last 7 days 
  only. 
  <%= link_to "More info", "https://dev.twitter.com/docs/faq#8650" %> 
</p>
<ol class="searches">
  <table class="table">
    <thead>
      <tr>
        <th>Operation</th>
        <th>Results Returned</th>
      <tr>
    </thead>
    <tbody>
      <tr>
        <td>twitter search</td>
        <td>Returns all tweets containing both "twitter" and "search"</td>
      </tr>
      <tr>
        <td>twitter AND search</td>
        <td>Returns all tweets containing both "twitter" and "search"</td>
      </tr>  
      <tr>
        <td>"happy hour"</td>
        <td>Returns all tweets which containing the exact phrase "happy hour"</td>
      </tr>
      <tr>
        <td>love OR hate</td>
        <td>Returns all tweets containing either "love" or "hate" (or both)</td>
      </tr>
      <tr>
        <td>beer -root</td>
        <td>Returns all tweets containing "beer" but not "root"</td>
      </tr>
      <tr>
        <td>#haiku</td>
        <td>Returns all tweets containing the hashtag "haiku"</td>
      </tr>
      <tr>
        <td>from:user</td>
        <td>Returns all tweets sent from the user @user</td>
      </tr>
      <tr>
        <td>to:user</td>
        <td>Returns all tweets sent to the user @user</td>
      </tr>
      <tr>
        <td>@user</td>
        <td>Returns all tweets mentioning @user</td>
      </tr>
    </tbody>
  </table>
</ol>
<br>
<br>
<h3>Streaming search</h3>
<p>
  The streaming search only allows you to enter keywords or phrases separated by 
  commas. Here the spaces operate like logical ANDs and the commas like logical 
  ORs.
</p>
<ol class="searches">
  <table class="table">
    <thead>
      <tr>
        <th>Operation</th>
        <th>Results Returned</th>
      <tr>
    </thead>
    <tbody>
      <tr>
        <td>twitter search</td>
        <td>Returns all tweets containing both "twitter" and "search"</td>
      </tr>
      <tr>
        <td>love, hate</td>
        <td>Returns all tweets containing either "love" or "hate" (or both)</td>
      </tr>
    </tbody>
  </table>
</ol>
<br>
<br>
<p>
  The text of the Tweet and some entity fields are considered for matches.  
  Specifically, the <tt>text</tt> attribute of the Tweet, <tt>expanded_url</tt> 
  and <tt>display_url</tt> for links and media, <tt>text</tt> for hashtags, and 
  <tt>screen_name</tt> for user mentions are checked for matches.
</p>
<p>
  Each phrase must be between 1 and 60 bytes, inclusive.
</p>
<p>
  Exact matching of phrases (equivalent to quoted phrases in most search 
  engines) is not supported.
</p>
<p>
  Punctuation and special characters will be considered part of the term they 
  are adjacent to.  In this sense, "hello." is a different track term than 
  "hello".  However, matches will ignore punctuation present in the Tweet.  So 
  "hello" will match both "hello world" and "my brother says hello."  Note that 
  punctuation is not considered to be part of a #hashtag or @mention, so a track 
  term containing punctuation will not match either #hashtags or @mentions.
</p>
<p>
  UTF-8 characters will match exactly, even in cases where an "equivalent" ASCII 
  character exists.  For example, "touch√©" will not match a Tweet containing 
  "touche".
</p>
<p>
  Non-space separated languages, such as CJK and Arabic, are currently 
  unsupported.
</p>
<p>
  URLs are considered words for the purposes of matches which means that the 
  entire domain and path must be included in the track query for a Tweet 
  containing an URL to match.  Note that <tt>display_url</tt> does not contain a 
  protocol, so this is not required to perform a match.
</p>
<p>
  Twitter currently canonicalizes the domain "www.example.com" to "example.com" 
  before the match is performed, so omit the "www" from URL track terms.
</p>
<p>
  If you need more help 
  <%= link_to "see this", "https://dev.twitter.com/docs/streaming-apis/keyword-matching" %>
</p>
<p>Track examples:</p>
<table class="table">
  <thead>
    <tr>
      <th>Parameter value</th><th>Will match...</th><th>Will not match...</th>
    </tr>
  <thead>
  <tr>
    <td>Twitter</td>
    <td>TWITTER
      <br>twitter
      <br>"Twitter"
      <br>twitter.
      <br>#twitter
      <br>@twitter
      <br>http://twitter.com
    </td>
    <td>
      TwitterTracker<br>#newtwitter
    </td>
  </tr>
  <tr>
    <td>Twitter's</td>
    <td>I like Twitter's new design</td>
    <td>Someday I'd like to visit @Twitter's office</td>
  </tr>
  <tr>
    <td>twitter api,twitter streaming</td>
    <td>The Twitter API is awesome
      <br>The twitter streaming service is fast
      <br>Twitter has a streaming API
    </td>
    <td>I'm new to Twitter</td>
  </tr>
  <tr>
    <td>example.com</td>
    <td>Someday I will visit example.com</td>
    <td>There is no example.com/foobarbaz</td>
  </tr>
  <tr>
    <td>example.com/foobarbaz</td>
    <td>example.com/foobarbaz
      <br>www.example.com/foobarbaz
    </td>
    <td>example.com</td>
  </tr>
  <tr>
    <td>www.example.com/foobarbaz</td>
    <td>.</td>
    <td>www.example.com/foobarbaz</td>
  </tr>
</table>
